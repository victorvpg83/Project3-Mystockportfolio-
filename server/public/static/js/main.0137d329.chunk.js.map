{"version":3,"sources":["service/Auth_service.js","components/ui/Navbar.js","service/Value_service.js","components/values/ValueCardIndex.js","components/values/ValueMostActive.js","components/values/ValueGainers.js","components/values/ValueLosers.js","components/pages/Index.js","components/pages/Profile.js","service/ValueCreate_service.js","components/values/ValueFormClose.js","components/values/RegOp.js","components/values/ValueFormAdd.js","components/values/ValuePort.js","components/values/GlobalPos.js","components/pages/Portfolio.js","components/values/ValueCardMarket.js","components/values/ValueMarket.js","components/pages/Market.js","components/pages/ValueDetail.js","components/values/ValueProfile.js","components/values/ValueRating.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","initI","_service","post","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Navigation","props","logoutUser","then","x","setUser","catch","err","console","log","Service","saludo","loggedInUser","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","as","to","onClick","Text","Component","getAllValues","getMostActive","getGainer","getLoser","getProfile","value","getRating","getRealTime","getHistoric","getMarketList","ValueCardIndex","ticker","price","changesPercentage","ValueMostActive","componentDidMount","updateMostActive","mostActive","setState","values","data","mostActiveStock","state","Container","Row","Col","md","Table","striped","bordered","hover","size","map","key","React","ValueGainers","updateGainers","Gainers","mostGainerStock","ValueLosers","updateLosers","Losers","mostLoserStock","Index","Profile","getOneValue","id","postValue","closeValue","getRegOp","ValueFormClose","handleSubmit","e","preventDefault","_valuesService","registroOP","closeModalWindow","updateValuesList","setTheUser","user","handleInputChange","target","name","ValuesService","disabledButton","buttonText","sellPrice","comision","symbol","BDSymbol","buyPrice","BDValue","qty","BDQuantity","bruto","undefined","neto","accion","Form","onSubmit","Group","Label","Control","type","onChange","Button","RegOp","updateCloseList","_dbservice","regOpDB","handleShow","showModalWindow","handleClose","DBService","_apiService","apiService","ROp","prices","ValueFormAdd","closeModalWindowQ","ValuePort","showValueFormClose","clickedValue","handleShowQ","showModalWindowQ","clickedValueQ","handleCloseQ","valuesN","APIPrice","bpa","plv","Modal","show","onHide","Header","closeButton","Title","Body","GlobalPos","portValue","cash","totalValue","profitLose","Portfolio","allValuesFromDB","copyValues","cartera","forEach","push","updatePrice","array","promisesArr","elm","Markets","Promise","all","res","bpaCalc","copyValuesN","calcValues","numberBpa","numberPlv","toFixed","reduce","a","b","cashinv","GlP","ValueCardMarket","ValueMarkets","updateMarket","symbolsList","ValueMarket","ValueDetail","profile","ValueRating","valuesR","rating","companyName","src","image","description","exchange","sector","recommendation","score","SignupForm","theNewUser","history","response","message","LoginForm","theLoggedUser","handleToastOpen","handleToastClose","showToast","toastText","text","Toast","onClose","delay","autohide","style","position","right","bottom","minWidth","App","fetchUser","theLoggedInUserFromTheServer","exact","path","component","render","match","Signup","Login","Market","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0137d329.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default class Services {\n    constructor() {\n        this._service = axios.create({\n\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true // Rutas persistentes\n\n        })\n    }\n\n    signup = (username, password,initI) => this._service.post('/signup', {\n            username,\n            password,\n            initI\n        })\n\n    login = (username, password) => this._service.post('/login', {\n        username,\n        password\n    })\n    logout = () => this._service.post('logout')\n    loggedin = () => this._service.get('/loggedin')\n}","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Service from '../../service/Auth_service'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n\n    }\n\n    logoutUser = () => {\n        this._service.logout()\n            .then(x => this.props.setUser(false))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\n\n        return (\n\n            this.props.loggedInUser ?\n\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>Charts</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/profile\">Mi perfil</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/details\">Detalles</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/portfolio\">Posición Global</Link></Nav.Link>\n                            <Nav.Link as = \"li\" > < Link to = \"/market\" > Mercado </Link></Nav.Link >\n                            <Nav.Link as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Bienvenid@ {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n\n                :\n\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>Charts</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/coasters\">Posición Global</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/signup\">Registro</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Mi perfil: {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n        )\n    }\n}\n\nexport default Navigation","import axios from \"axios\"\n\nexport default class Services {\n    constructor() {\n        this._service = axios.create({\n            baseURL: 'https://financialmodelingprep.com/api/v3',\n        })\n    }\n\n    getAllValues = () => this._service.get('/company/stock/list')\n    getMostActive = () => this._service.get('/stock/actives')\n    getGainer = () => this._service.get('/stock/gainers')\n    getLoser = () => this._service.get('/stock/losers')\n    getProfile = (value) => this._service.get(`/company/profile/${value}`)\n    getRating = (value) => this._service.get(`/company/rating/${value}`)\n    getRealTime = (value) => this._service.get(`/stock/real-time-price/${value}`)\n    getHistoric = (value) => this._service.get(`/historical-price-full/${value}?timeseries=21`)\n    getMarketList = () => this._service.get('/company/stock/list')\n\n}","import React from 'react'\n\nconst ValueCardIndex = ({ ticker, price, changesPercentage }) => {\n\n    return (\n<>\n    <tr>\n        <td>{ticker}</td>\n        <td>{price}</td>\n        <td>{changesPercentage}</td>\n    </tr>\n</>\n    )\n}\n\nexport default ValueCardIndex","import React from 'react'\nimport Service from '../../service/Value_service'\n\nimport { Container, Row, Table, Col } from 'react-bootstrap'\n\nimport ValueCardIndex from './ValueCardIndex'\n\nclass ValueMostActive extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: [],\n        }\n    }\n    componentDidMount = () => this.updateMostActive()\n\n    updateMostActive = () => {\n        this._service.getMostActive()\n            .then(mostActive => this.setState({values: mostActive.data.mostActiveStock}))\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n            <section>\n                <Container>\n                <h3>Valores más activos</h3>\n                    <Row>\n                        <Col className=\"table-index\" md={4}>\n                            <Table striped bordered hover size=\"sm\">\n                              <thead>\n                                <tr>\n                                  <th>Ticker</th>\n                                  <th>Precio $</th>\n                                  <th>Variación</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.values.map(values => <ValueCardIndex key={values.ticker} {...values} />)}\n                              </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default ValueMostActive","import React from 'react'\nimport Service from '../../service/Value_service'\n\nimport { Container, Row, Table, Col } from 'react-bootstrap'\n\nimport ValueCardIndex from './ValueCardIndex'\n\nclass ValueGainers extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: [],\n        }\n    }\n\n    componentDidMount = () => this.updateGainers()\n\n    updateGainers = () => {\n        this._service.getGainer()\n            .then(Gainers => this.setState({values: Gainers.data.mostGainerStock}))\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n            <section>\n                <Container>\n                <h3>Ganadores del día</h3>\n                    <Row>\n                        <Col className=\"table-index\" md={4}>\n                            <Table striped bordered hover size=\"sm\">\n                              <thead>\n                                <tr>\n                                  <th>Ticker</th>\n                                  <th>Precio $</th>\n                                  <th>Variación</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.values.map(values => <ValueCardIndex key={values.ticker} {...values} />)}\n                              </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\n\nexport default ValueGainers","import React from 'react'\nimport Service from '../../service/Value_service'\n\nimport { Container, Row, Table, Col } from 'react-bootstrap'\n\nimport ValueCardIndex from './ValueCardIndex'\n\nclass ValueLosers extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: []\n        }\n    }\n\n    componentDidMount = () => this.updateLosers()\n\n    updateLosers = () => {\n        this._service.getLoser()\n            .then(Losers => this.setState({values: Losers.data.mostLoserStock}))\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n            <section>\n                <Container>\n                <h3>Perdedores del día</h3>\n                    <Row>\n                        <Col className=\"table-index\" md={4}>\n                            <Table striped bordered hover size=\"sm\">\n                              <thead>\n                                <tr>\n                                  <th>Ticker</th>\n                                  <th>Precio $</th>\n                                  <th>Variación</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.values.map(values => <ValueCardIndex key={values.ticker} {...values} />)}\n                              </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\n\nexport default ValueLosers","import React from 'react'\nimport { Container, Row } from 'react-bootstrap'\n\nimport ValueMostActive from '../values/ValueMostActive'\nimport ValueGainers from '../values/ValueGainers'\nimport ValueLosers from '../values/ValueLosers'\n\n\n\n\nconst Index = () => {\n\n    return (\n        <Container>\n            <section>\n\n                <h1>My Stock Portfolio</h1>\n                <Row>\n                    <ValueMostActive />\n                    <ValueGainers />\n                    <ValueLosers />\n\n\n                </Row>\n            </section>\n        </Container>\n    )\n}\n\nexport default Index","import React from 'react'\n\nconst Profile = props => {\n\n    return (\n        <h1>Perfil {props.loggedInUser.username}</h1>\n    )\n}\n\n\nexport default Profile","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this._service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/values`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    getOneValue = id => this._service.get(`/${id}`)\n    getAllValues = () => this._service.get('/getAllValues')\n    postValue = value => this._service.post('/new', value)\n    \n    //cerrar posición y añadir al registro de operacines\n    closeValue = value => this._service.post('/close', value)\n    getRegOp = () => this._service.get('/getregop')\n}","import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport ValuesService from '../../service/ValueCreate_service'\n\nclass ValueFormClose extends Component {\n\n    constructor(props) {\n        super(props)\n        this._valuesService = new ValuesService()\n\n        this.state = {\n            disabledButton: false,\n            buttonText: 'Cerrar posición',\n            registroOP: {\n                sellPrice: \"\",      //viene del formulario\n                comision: \"\",       //viene del formulario  \n                symbol: this.props.value.BDSymbol, //viene de cartera\n                buyPrice: this.props.value.BDValue,       //viene de cartera\n                qty: this.props.value.BDQuantity,            //viene de cartera\n                bruto: undefined,          //hay que calcularlo\n                neto: undefined,           //hay que calcularlo\n            },\n            accion: {\n\n            }        \n        }\n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this._valuesService.closeValue(this.state.registroOP)\n            .then(x => {\n                this.props.closeModalWindow()\n                this.props.updateValuesList()\n                this.props.setTheUser(x.data.user)\n            })\n            .catch(err => console.log(err))\n        }\n        \n        handleInputChange = e => {\n\n            let { name, value } = e.target\n\n            this.setState(\n                {registroOP: { ...this.state.registroOP, [name]: value }\n            })\n          \n        }\n        render() {\n            console.log(this.props)\n            return (\n                <Form onSubmit={this.handleSubmit}>\n\n                <Form.Group>\n                    <Form.Label>Precio de venta</Form.Label>\n                    <Form.Control type=\"number\" name=\"sellPrice\" onChange={this.handleInputChange} value={this.state.registroOP.sellPrice} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Comisión</Form.Label>\n                    <Form.Control type=\"number\" name=\"comision\" onChange={this.handleInputChange} value={this.state.registroOP.comision} />\n                </Form.Group>\n\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\">Cerrar posición</Button>\n\n            </Form>\n        )\n    }\n}\n\n\nexport default ValueFormClose","import React from 'react'\nimport { Container, Row, Col, Table, Modal, Button } from 'react-bootstrap'\nimport apiService from \"../../service/Value_service\"\nimport DBService from \"../../service/ValueCreate_service\"\n\nimport ValueFormClose from './ValueFormClose'\n\n\n\nclass RegOp extends React.Component {\n\n    constructor(props) {                                                        \n        super(props)\n        this._dbservice = new DBService()\n        this._apiService = new apiService()\n        this.state = {\n            showModalWindow: false,            \n        }\n    }\n\n    componentDidMount = () => this.updateCloseList()\n\n    updateCloseList = () => {\n        this._dbservice.getRegOp()\n            .then(regOpDB =>{\n                console.log(regOpDB)\n                //  this.setState({ \n                //      regOp: regOpDB.data\n                // }, () => this.updatePrice(this.state.regOp.closevalues))\n            })\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    handleShow = () => this.setState({ showModalWindow: true })\n    handleClose = () => this.setState({ showModalWindow: false })\n\n\n        render () {\n            console.log(this.props.ROp)\n            return (\n                <Container>\n                    \n                    <h2>Registro de operaciones: </h2>\n                    <Row>\n                    <Col className=\"table-index\" md={12}>\n                            <Table striped bordered hover size=\"sm\">\n                                <thead>\n                                  <tr>\n                                    <th>Símbolo</th>\n                                    <th>Nº de Acciones</th>\n                                    <th>Precio de compra</th>\n                                    <th>Precio de venta</th>\n                                    <th>comision</th>\n                                    <th>B/P Bruto</th>\n                                    <th>B/P Neto</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                        \n\n                        {this.props.ROp ?\n                            this.props.ROp.map(prices => {\n\n                                \n\n                                    return (\n                                        <>\n                                            <tr>\n                                            <td>{prices.symbol}</td>\n                                            <td>{prices.qty}</td>\n                                            <td>{prices.buyPrice}</td>\n                                            <td>{prices.sellPrice}</td>\n                                            <td>{prices.comision}</td>\n                                            <td></td>\n                                            <td></td>\n                                            </tr>\n                                \n\n                                        </>\n                                    )\n                            \n                            }) :\n                            null}\n                    \n                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n\n\n                </Container>\n        )\n    }                   \n}\n\n\nexport default RegOp "," import React, { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport ValuesService from '../../service/ValueCreate_service'\n\nclass ValueFormAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this._valuesService = new ValuesService()\n\n        this.state = {\n            disabledButton: false,\n            buttonText: 'Añadir valor',\n            value: {\n                symbol: \"\",\n                qty: undefined,\n                buyPrice: undefined\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this._valuesService.postValue(this.state.value)\n            .then(x => {\n\n                this.props.closeModalWindowQ()\n                this.props.updateValuesList()\n                .then(() => this.props.setTheUser(x.data.user))\n                \n            })\n            .catch(err => console.log(err))\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            value: { ...this.state.value, [name]: value }\n        })\n    }\n\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Símbolo</Form.Label>\n                    <Form.Control type=\"text\" name=\"symbol\" onChange={this.handleInputChange} value={this.state.value.symbol} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Nº de Acciones</Form.Label>\n                    <Form.Control type=\"number\" name=\"qty\" onChange={this.handleInputChange} value={this.state.value.qty} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Precio de Compra</Form.Label>\n                    <Form.Control type=\"number\" name=\"buyPrice\" onChange={this.handleInputChange} value={this.state.value.buyPrice} />\n                </Form.Group>\n\n                <Button variant=\"dark\" size=\"sm\" type=\"submit\">Crear</Button>\n            </Form>\n        )\n    }\n}\n\n\nexport default ValueFormAdd","import React from 'react'\nimport { Container, Row, Table, Button, Modal } from 'react-bootstrap'\nimport apiService from \"../../service/Value_service\"\nimport Service from \"../../service/ValueCreate_service\"\nimport ValueFormAdd from './ValueFormAdd'\n\n\nimport ValueFormClose from './ValueFormClose'\n\n\n\n\nclass ValuePort extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this._apiService = new apiService()\n        this.state = {\n            values: [],\n            showModalWindow: false,\n            showModalWindowQ: false,\n\n            showValueFormClose: false,\n             clickedValue: {},\n             clickedValueQ: {},\n            valuesN: []\n\n        }\n    }\n\n\n    showValueFormClose = () => this.setState({showValueFormClose: true})\n\n    handleShow = (value) => this.setState({ showModalWindow: true, clickedValue: value  })\n    handleShowQ = (value) => this.setState({ showModalWindowQ: true, clickedValueQ: value  })\n   \n    handleClose = () => this.setState({ showModalWindow: false, clickedValue: {}})\n    handleCloseQ = () => this.setState({ showModalWindowQ: false, clickedValueQ: {}})\n\n\n    render() {\n        console.log(this.props.values)\n\n        return (\n            <Container>\n\n                <h2>Valores en cartera: <Button variant=\"dark\" onClick={this.handleShowQ}>Añadir posición</Button> </h2>\n                \n                <Row>\n\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Valor</th>\n                                <th>Nº de Acciones</th>\n                                <th>Precio de compra</th>\n                                <th>Precio</th>\n                                <th>B/P acción</th>\n                                <th>B/P Valor</th>\n\n                            </tr>\n\n                        </thead>\n                        <tbody>\n                        \n\n                                {this.props.values ?\n                                    this.props.values.map(prices => {\n\n                                        if (prices.APIPrice) {\n\n                                            return (\n                                                <>\n                                                    <tr>\n                                                    <td>{prices.BDSymbol}</td>\n                                                    <td>{prices.BDQuantity}</td>\n                                                    <td>{prices.BDValue}</td>\n                                                    <td>{prices.APIPrice}</td>\n                                                    <td>{prices.bpa}</td>\n                                                    <td>{prices.plv}</td>\n                                                    <Button variant=\"dark\" onClick={() => this.handleShow(prices)}>Cerrar posición</Button>\n                                                    </tr>\n                                                    <Modal show={this.state.showModalWindow} onHide={this.handleClose}>\n                                                        <Modal.Header closeButton>\n                                                            <Modal.Title>Cerrar posición</Modal.Title>\n                                                        </Modal.Header>\n                                                        <Modal.Body>\n                                                            <ValueFormClose setTheUser={this.props.setTheUser} value={this.state.clickedValue} closeModalWindow={this.handleClose} updateValuesList={this.props.updateValuesList} />\n                                                        </Modal.Body>\n                                                    </Modal>\n\n                                                </>\n                                            )\n                                        }\n                                        else return null\n                                    }) :\n                                    null}\n                            \n                        </tbody>\n                    </Table>\n                    \n\n                    <Modal show={this.state.showModalWindowQ} onHide={this.handleCloseQ}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Añadir posición</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <ValueFormAdd setTheUser={this.props.setTheUser} closeModalWindowQ={this.handleCloseQ} updateValuesList={this.props.updateValuesList}/>\n                            </Modal.Body>\n                    </Modal>\n\n                </Row>\n\n            </Container>\n        )\n    }\n\n}\n\n\nexport default ValuePort\n","import React from 'react'\nimport { Container, Row, Col, Table, Button, Modal } from 'react-bootstrap'\nimport apiService from \"../../service/Value_service\"\nimport Service from \"../../service/ValueCreate_service\"\n\nimport ValueFormAdd from './ValueFormAdd'\n\n\nclass GlobalPos extends React.Component {\n\n    constructor(props) {                                                        \n        super(props)\n        this._service = new Service()\n        this._apiService = new apiService()\n        this.state = {\n\n            valuesN: []\n        \n        }\n    }\n\n        render () {\n            console.log(this.props.values)\n            return (\n                <Container>\n                    <Row className=\"PosglobalRow\">\n                        <Col className=\"table-index\" md={6}>\n                            <h1>Posición Global</h1>\n                        </Col>\n\n                        <Col className=\"table-index\" md={2}>\n                        </Col>\n                    </Row>    \n                    <Row>\n                    \n                    \n                        <Col className=\"table-index\" md={8}>\n                            <Table striped bordered hover size=\"sm\">\n                                <thead>\n                                  <tr>\n                                    <th>Inversión inicial €</th>\n                                    <th>Valor de la cartera</th>\n                                    <th>Efectivo</th>\n                                    <th>Inversión total</th>\n                                    <th>Beneficio/perdida</th>\n                                  </tr>\n                                </thead>\n                                 <tbody> \n                                     <td>{this.props.loggedInUser.initI}</td>\n                                     <td>{this.props.values.portValue}</td>\n                                     <td>{this.props.values.cash}</td>\n                                     <td>{this.props.values.totalValue}</td>\n                                     <td>{this.props.values.profitLose}</td>                 \n                                  </tbody>\n                            </Table>\n                        </Col>\n                    \n                    \n                    </Row>\n\n                </Container>\n        )\n    }   \n                \n}\n\n\nexport default GlobalPos","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport apiService from \"../../service/Value_service\"\nimport Service from \"../../service/ValueCreate_service\"\n\nimport RegOp from '../values/RegOp'\nimport ValuePort from '../values/ValuePort'\nimport GlobalPos from '../values/GlobalPos'\n\n\nclass Portfolio extends React.Component {\n\n    constructor(props) {                                                        \n        super(props)\n        this._service = new Service()\n        this._apiService = new apiService()\n        this.state = {\n            GlP : {\n            portValue: undefined,\n            cash: undefined,\n            totalValue: undefined,\n            profitLose: undefined,\n        },\n            valuesN: [],\n\n            ROp: [] \n        \n        }\n    }\n\n    componentDidMount = () => this.updateValuesList()\n\n    updateValuesList = () => {\n        this._service.getAllValues()\n            .then(allValuesFromDB =>{\n                console.log(allValuesFromDB.data.registroOP)\n                const copyValues = []\n                allValuesFromDB.data.cartera.forEach(value => {\n                    copyValues.push({\n                        BDValue: value.buyPrice,\n                        BDSymbol: value.symbol,\n                        BDQuantity: value.qty,\n                        APIPrice: null,\n                        bpa: undefined,\n                        plv: undefined,\n                        portValue: undefined,\n                        cash: undefined,\n                        totalValue: undefined,\n                        profitLose: undefined\n\n                    })\n\n            })\n            \n                 this.setState({ \n                     valuesN: copyValues,\n                     ROp:allValuesFromDB.data.registroOP\n                }, () => this.updatePrice(this.state.valuesN))\n            })\n            .catch(err => console.log(\"Error\", err))\n    }\n\n    updatePrice = (array) =>{\n        console.log(array)\n        const copyArray = [...array.map(elm => {return {...elm}})]\n        const promisesArr = copyArray.map(elm => {\n\n            return this._apiService.getRealTime(elm.BDSymbol)\n            .then(Markets => {\n               elm.APIPrice = Markets.data.price\n              \n               return elm\n            } )\n            \n            .catch(err => console.log(\"Error\", err))\n        })\n\n        Promise.all(promisesArr).then((res) => {\n            console.log(res, \"respuesta promises\")\n            this.setState({ valuesN: res }, () => this.bpaCalc())\n        }).catch(err => console.log(err, \"error de respuesta promises\"))\n    }\n\n    bpaCalc = () => {\n        console.log(this.state.ROp)\n        let copyValuesN = [...this.state.valuesN.map(elm => { return { ...elm } })]\n\n        let calcValues = copyValuesN.map(value => {\n            let numberBpa = value.APIPrice - value.BDValue\n            let numberPlv = numberBpa * value.BDQuantity\n            value.bpa = numberBpa.toFixed(3)\n            value.plv = numberPlv.toFixed(3)\n            \n            return value\n        })\n        \n        let portValue = copyValuesN.map(elm => elm.APIPrice*elm.BDQuantity).reduce((a, b) => a + b, 0)\n        let cashinv = copyValuesN.map(elm => elm.BDQuantity*elm.BDValue).reduce((a, b) => a + b, 0)\n        let cash = this.props.loggedInUser.initI-cashinv\n        let totalValue = cash+portValue\n        let profitLose = totalValue-this.props.loggedInUser.initI\n\n        let copyROp =[...this.state.ROp.map(elm => { return { ...elm } })] \n            let calc = copyROp.map(value =>{\n                let calcB = (value.sellPrice-value.buyPrice)* value.qty\n                let calcN = (value.sellPrice-value.buyPrice)* value.qty\n            })\n\n        this.setState({\n            valuesN: calcValues,\n            GlP:{ portValue: portValue.toFixed(2),\n            cash: cash.toFixed(2),\n            totalValue: totalValue.toFixed(2),\n            profitLose: profitLose.toFixed(2)\n            }\n        })\n\n    }\n\n        render () {\n            console.log(this.state.ROp)\n            return (\n                <Container>\n                    <Row>\n                    <Col className=\"table-index\" md={12}>\n                        <GlobalPos loggedInUser={this.props.loggedInUser} setTheUser={this.props.setTheUser} values={this.state.GlP} updateValuesList={this.updateValuesList}/>\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                    <Col className=\"table-index\" md={12}>\n                        <tr>\n                        <ValuePort setTheUser={this.props.setTheUser} values={this.state.valuesN} updateValuesList={this.updateValuesList}/>\n                        </tr>\n                        </Col>  \n                    </Row>\n\n                    <Row>\n                        <Col className=\"table-index\" md={12}>\n                            <RegOp setTheUser={this.props.setTheUser} updateValuesList={this.updateValuesList} ROp ={this.state.ROp} />\n                        </Col>\n                    </Row>\n                </Container>\n        )\n    }   \n                \n}\n\nexport default Portfolio","import React from 'react'\n\nconst ValueCardMarket = ({ symbol, name, price }) => {\n\n    return (\n<>\n    <tr>\n        <td>{symbol}</td>\n        <td>{name}</td>\n        <td>{price}</td>\n    </tr>\n</>\n    )\n}\n\nexport default ValueCardMarket","import React from 'react'\nimport Service from '../../service/Value_service'\nimport { Container, Row, Table, Col } from 'react-bootstrap'\nimport ValueCardMarket from './ValueCardMarket'\n\nclass ValueMarkets extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: []\n        }\n    }\n\n    componentDidMount = () => this.updateMarket()\n\n    updateMarket = () => {\n        this._service.getMarketList()\n            .then(Markets => this.setState({values: Markets.data.symbolsList}))    \n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n            <section>\n                <Container>\n                <h3>Mercado</h3>\n                    <Row>\n                        <Col className=\"table-index\" md={4}>\n                            <Table striped bordered hover size=\"sm\">\n                              <thead>\n                                <tr>\n                                  <th>Ticker</th>\n                                  <th>Precio $</th>\n                                  <th>Variación</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.values ? this.state.values.map(values => <ValueCardMarket key={values.symbol} {...values} /> ) : null }\n                              </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default ValueMarkets","import React from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport ValueMarket from '../values/ValueMarket'\n\nconst Index = () => {\n\n    return (\n        <Container>\n            <section>\n                <h1>Market</h1>\n                <Row>\n                    <ValueMarket />\n                </Row>\n            </section>\n        </Container>\n    )\n}\n\nexport default Index","import React from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport Service from '../../service/Value_service'\n\n\nimport ValueProfile from '../values/ValueProfile'\nimport ValueRating from '../values/ValueRating'\n\n\nclass ValueDetail extends React.Component  {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            symbol: ''\n\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this._service.getProfile(this.state.symbol)\n            .then(getProfile => {\n\n                this.setState({\n                    values: getProfile.data.profile,\n                    symbol: getProfile.data.symbol\n                })\n                console.log (getProfile)\n\n            })\n            .catch(err => console.log(err))\n        this._service.getRating(this.state.symbol)\n            .then(ValueRating => {\n\n                this.setState({\n                    valuesR: ValueRating.data.rating\n                })\n\n\n            })\n            \n            .catch(err => console.log(\"Error\", err))\n        // this._service.getHistoric(this.state.symbol)\n        //     .then(Hist => {\n            \n\n        //         this.setState({\n        //             valuesR: ValueRating.data.rating\n        //         })\n        //     })\n            \n            .catch(err => console.log(\"Error\", err))\n\n    }\n\n    handleInputChange = e => {\n        let { value } = e.target\n        this.setState({symbol: value})\n    }\n\n\n    render () {\n        return (\n            <Container>\n\n                <Row> \n                    <Col className=\"table-index\" md={6}>\n                    <h1>Detalles del valor</h1>\n                    </Col>\n                    <Col className=\"table-index\" md={6}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Símbolo</Form.Label>\n                                <Form.Control type=\"text\" name=\"symbol\" onChange={this.handleInputChange} value={this.state.symbol} />\n                            </Form.Group>\n\n                            <Button variant=\"dark\" size=\"sm\" type=\"submit\">Buscar valor</Button>\n                        </Form>\n                    </Col>\n                </Row>\n        \n                <section>\n        \n                    <Row>\n                        <Col className=\"table-index\" md={6}>\n                            {/* <ValueProfile/> */}\n                            {this.state.values ?  \n                            <>\n                                <h3>{this.state.values.companyName}</h3>\n                              <img src={this.state.values.image} ></img>\n                                 <p>Símbolo: {this.state.symbol} </p>\n                              {/* <p> {this.state.values.companyName} </p> */}\n                              \n                              <p> {this.state.values.description} </p>\n                              <p> Mercado: {this.state.values.exchange} </p>\n                              <p> Sector: {this.state.values.sector} </p> \n                              </>   :\n                              null}\n                        </Col>\n        \n                        <Col className=\"table-index\" md={6}>\n                            {/* <ValueRating /> */}\n                            {this.state.values ? \n                            <>\n                                <h3>Análisis fundamental</h3>\n                                <p>Recomendación: {this.state.valuesR.recommendation} </p>\n                                <p>Score: {this.state.valuesR.score} </p>\n                                <p>Rating: {this.state.valuesR.rating} </p>\n                                <h3>Análisis técnico</h3>\n                                <p>Precio: {this.state.values.price} $ </p>\n\n                              </>   :\n                              null}\n                        </Col>\n                        \n                    </Row>\n                </section>\n            </Container>\n        )\n    }\n}\n\nexport default ValueDetail","import React from 'react'\nimport Service from '../../service/Value_service'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nclass ValueProfile extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: [],\n        }\n    }\n\n    componentDidMount = () => this.updateProfileValue()\n\n    updateProfileValue = () => {\n        this._service.getProfile()\n            .then(ValueProfile => {\n                this.setState({\n                    values: ValueProfile.data.profile,\n                    symbol: ValueProfile.data.symbol\n                })\n            })\n            \n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n\n            <section>\n\n                <Container>\n                <h3>Perfil</h3>\n\n                    <Row>\n                        <Col className=\"table-index\" md={6}>\n\n                            {this.state.values ?  \n                            <>\n                            <p>{this.state.symbol} </p>\n                            <img src={this.state.values.image} ></img>\n                            <p> {this.state.values.companyName} </p>\n                            <p>Precio: {this.state.values.price} $ </p>\n                            <p> {this.state.values.description} </p>\n                            <p> Mercado: {this.state.values.exchange} </p>\n                            <p> Sector: {this.state.values.sector} </p> \n                            </>   :\n                            null}\n                            \n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default ValueProfile","import React from 'react'\nimport Service from '../../service/Value_service'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\nclass ValueRating extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            values: [],\n        }\n    }\n\n    componentDidMount = () => this.updateRatingValue()\n\n    updateRatingValue = () => {\n        this._service.getRating()\n            .then(ValueRating => this.setState({values: ValueRating.data.rating}))\n            \n            .catch(err => console.log(\"Error\", err))\n    }\n\n    render() {\n        return (\n\n            <section>\n\n                <Container>\n                <h3>Fundamental</h3>\n\n                    <Row>\n                        <Col className=\"table-index\" md={6}>\n                            <p> {this.state.values.recommendation} </p>\n                            <p> {this.state.values.score} </p>\n                            <p> {this.state.values.rating} </p>\n                        </Col>\n                    </Row>\n                </Container>\n\n\n            </section>\n\n        )\n    }\n}\n\n\nexport default ValueRating","import React, {Component} from 'react'\nimport {Button, Form, Container } from 'react-bootstrap'\n\nimport Service from '../../service/Auth_service'\n\nclass SignupForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            username: '',\n            password: '',\n            initI: ''\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {\n            username,\n            password,\n            initI\n        } = this.state\n\n        this._service.signup(username, password, initI)\n            .then(theNewUser => {\n\n                this.props.setUser(theNewUser.data)\n                this.setState({\n                    username: '',\n                    password: '',\n                    initI: ''\n                })\n                this.props.history.push('/') // REDIRECCIONAMIENTO\n            })\n            .catch(err => console.log(err.response.data.message))\n    }\n\n\n    handleInputChange = e => {\n        let {\n            name,\n            value\n        } = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    render() {\n        return (\n            <Container>\n\n                <h1>Registro</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Contraseña</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Inversión inicial</Form.Label>\n                        <Form.Control type=\"number\" name=\"initI\" onChange={this.handleInputChange} value={this.state.initI} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default SignupForm","import React, { Component } from 'react'\nimport { Button, Form, Container, Toast } from 'react-bootstrap'\n\nimport Service from '../../service/Auth_service'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showToast: false,\n            toastText: '',\n            user: { username: '', password: '' }\n        }\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state.user\n        this._service.login(username, password)\n            .then(theLoggedUser => {\n                this.props.setUser(theLoggedUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push('/')            // REDIRECCIONAMIENTO\n            })\n            .catch(err => {\n                this.handleToastOpen(err.response.data.message)\n            })\n    }\n\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\n\n\n    render() {\n        return (\n            <Container>\n\n                <h1>Iniciar sesión</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Contraseña</Form.Label>\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                </Form>\n\n                <Toast\n                    onClose={this.handleToastClose}\n                    show={this.state.showToast}\n                    delay={3000}\n                    autohide\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '10px',\n                        minWidth: '250px'\n                    }}>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Error</strong>\n                        <small>Session manager</small>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toastText}</Toast.Body>\n                </Toast>\n\n            </Container >\n        )\n    }\n}\n\n\nexport default LoginForm","import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Service from './service/Auth_service'\n\n\n/* CUSTOM UI COMPONENTS */\nimport Navbar from './components/ui/Navbar.js'\n\n/* CUSTOM PAGE COMPONENTS */\nimport Index from './components/pages/Index'\nimport Profile from './components/pages/Profile'\nimport Portfolio from './components/pages/Portfolio'\nimport Market from './components/pages/Market'\nimport ValueDetail from './components/pages/ValueDetail'\n\n\n/* CUSTOM AUTH COMPONENTS */\nimport Signup from './components/auth/Signup'\nimport Login from './components/auth/Login'\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this._service = new Service()\n  }\n\n  setTheUser = user => {\n    console.log(user)\n    this.setState({ loggedInUser: user })\n    console.log(\"El método 'setTheUser' de App.js se ha invocado, pasando al estado 'loggedInUser:\", this.state.loggedInUser)\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this._service.loggedin()\n        .then(theLoggedInUserFromTheServer => this.setState({ loggedInUser: theLoggedInUserFromTheServer.data }))\n        .catch(err => {\n          this.setState({ loggedInUser: false })\n          console.log({ err })\n        })\n    }\n  }\n\n\n  render() {\nconsole.log(this.state.loggedInUser)\n    this.fetchUser()\n\n    return (\n      <>\n        <Navbar loggedInUser={this.state.loggedInUser} setUser={this.setTheUser} />\n\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n\n          <Route path=\"/signup\" render={match => <Signup setUser={this.setTheUser} {...match} />} />\n          <Route path=\"/login\" render={match => <Login setUser={this.setTheUser} {...match} />} />\n          {/* <Route path=\"/profile\" \n           render={match =>\n            this.state.loggedInUser == null ? (\n              <Redirect to=\"/\" />\n            ) : this.state.loggedInUser || {} ? (\n              <Profile loggedInUser={this.state.loggedInUser} />\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          }\n          /> */}\n          <Route path=\"/profile\" render={() =>\n            this.state.loggedInUser ? <Profile loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />\n          } />\n          <Route path=\"/portfolio\" render={() =>\n            this.state.loggedInUser ? <Portfolio loggedInUser={this.state.loggedInUser} setTheUser={this.setTheUser}/> : <Redirect to=\"/\" />\n          } />\n          <Route path=\"/market\" render={() =>\n            this.state.loggedInUser ? <Market loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />\n          } />\n          <Route path=\"/details\" render={() =>\n            this.state.loggedInUser ? <ValueDetail loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />\n          } />\n        </Switch>\n\n      </>\n\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}